on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  get_version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Retrieve version and Changelog
      id: get_version
      run: |
        echo pyicloud_version=$(cat setup.py | grep version= | cut -d'"' -f 2) >> $GITHUB_OUTPUT
        echo 'pyicloud_changelog<<EOF' >> $GITHUB_OUTPUT
        scripts/extract_releasenotes CHANGELOG.md >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Log version and Changelog
      run: |
        echo "pyicloud_version=${{steps.get_version.outputs.pyicloud_version}}"
        echo "pyicloud_changelog=${{steps.get_version.outputs.pyicloud_changelog}}"

    outputs:
      pyicloud_version: ${{steps.get_version.outputs.pyicloud_version}}
      pyicloud_changelog: ${{steps.get_version.outputs.pyicloud_changelog}}

  build:
    runs-on: ${{ matrix.os }}
    needs: [get_version]
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        scripts/install_deps

    - name: Build
      run: |
        scripts/build

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pyicloud-${{needs.get_version.outputs.pyicloud_version}}-artifacts
        if-no-files-found: error
        path: |
          dist/pyicloud*

  publish_pypi:
    runs-on: ubuntu-latest
    needs: [get_version,build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      
      - name: Install dependencies
        run: |
          scripts/install_deps

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: pyicloud-${{needs.get_version.outputs.pyicloud_version}}-artifacts
          path: |
            dist

      - name: Publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python3 -m twine upload dist/*.whl

  release:
    needs: [get_version, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: pyicloud-${{needs.get_version.outputs.pyicloud_version}}-artifacts
          path: |
            dist

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          body: ${{ needs.get_version.outputs.pyicloud_changelog }}
